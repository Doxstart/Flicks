#def sirve para definir un m√©todo.
#Se usa snake_case para escribir los nombres de los m√©todos.
#end se usa para terminar de definir el m√©todo.
#La indentaci√≥n estandar en ruby es de 2 espacios.
#no es necesario usar "return" ya que viene impl√≠cito en el lenguaje.
#Se puede quitar puts dentro de m√©todo e invocarlo fuera con el nombre del m√©todo,
#el resultado es el mismo.
#el m√©todo siempre me va a regresar el √∫ltimo valor registrado,
#por ejemplo, si a√±ado esta operaci√≥n (6 + 5) despu√©s del string,
#el m√©todo regresar√° 11 y obviar√° el string.        
#def movie_info 
#  "Goonies has a rank of 10"
#end    
#Puedo asignar un default a un parametro con = el cual solo se usar√°.
#si no lo ingreso de antemano.
#Para que no haya problemas con el orden en el cual ingreso los parametros,
#uso los "Keyword Params" osea agrego (:) al final del nombre del param,
#as√≠ me aseguro de que cada param tenga el orden correcto sin importar el valor.
def emojis(emoji: "ü§†", number:)
  emoji * number
end    

def movie_info(title: , rank: title.length) 
  stars = emojis(emoji: "‚≠ê", number: rank)
  "#{title.upcase} has a rank of #{rank}: #{stars}"
end

puts movie_info(title: "Goonies", rank: 10)
puts movie_info(rank: 9, title: "Ghostbusters")

movie_title = "Seven"
#Aqui deber√≠a haber creado la variable movie_rank para almacenar el valor,
#pero prefer√≠ usar el lenght de movie_title como prueba
#al final quit√© el movie_title.lenght para que no haya problemas con,
#los keyword params
puts movie_info(title: movie_title)

movie_title_2 = "Goldfinger"
movie_rank_2 = 3
puts movie_info(title: movie_title_2, rank: movie_rank_2)